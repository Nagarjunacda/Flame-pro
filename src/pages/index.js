import { Inter } from "next/font/google";
import { homePageUrl } from "@/utils/urls";
import { handleServerSideProps } from "@/utils/handleServerSideData";
import TitleAndTextCentre from "@/components/ContentBlocks/TitleAndTextCentre";
import HeaderBanner from "@/components/ContentBlocks/HeaderBanner";
import UspBlock from "@/components/ContentBlocks/UspBlock";

const inter = Inter({ subsets: ["latin"] });

export default function Home(props) {
  const { data } = props
  const trayData = data?.acf?.content_blocks;
  const icon1 = "/Images/usbIcon1.svg";
  const icon2 = "/Images/usbIcon2.svg";
  const icon3 = "/Images/usbIcon3.svg";

  function getTrays(tray) {
    switch (tray?.acf_fc_layout) {
      case "header_banner_with_cta":
        return <HeaderBanner trayData={tray} />
      case 'usp_block':
        return <UspBlock
          firtImage={icon1}
          firstText="Lorem Ipsum Dolor Sit Met"
          secondImage={icon2}
          secondText="Lorem Ipsum Dolor Sit Met"
          thirdText="Lorem Ipsum Dolor Sit Met"
          thirdImage={icon3}
        />
      case "title_and_text_centre":
        return <TitleAndTextCentre
          title={"About FlamePro & Who We Are"}
          description={
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id."
          }
        />
      default:
        return null
    }
  }

  return (
    <>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      <main>
        {trayData ? (
          trayData.map((tray) => {
            return getTrays(tray)
          })
        ) : (
          <p>Something went wrong unable to fetch the data</p>
        )}
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const { data, error } = await handleServerSideProps(homePageUrl);
  if (error) {
    return {
      props: {
        data: null,
      },
    };
  }

  return {
    props: {
      data,
    },
  };
}
